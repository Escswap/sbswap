{"ast":null,"code":"import _slicedToArray from\"D:\\\\solidityproj\\\\esccoinswap\\\\interface-i18n1.3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{JSBI,Token}from'sb1swap-sdk';import React,{useCallback,useContext,useMemo,useState}from'react';import{ThemeContext}from'styled-components';import{AutoColumn}from'../../components/Column';import{AutoRow}from'../../components/Row';import{SearchInput}from'../../components/SearchModal/styleds';import{useAllTokenV1Exchanges}from'../../data/V1';import{useActiveWeb3React}from'../../hooks';import{useTokenBalancesWithLoadingIndicator}from'../../state/wallet/hooks';import{BackArrow,TYPE}from'../../theme';import{LightCard}from'../../components/Card';import{BodyWrapper}from'../AppBody';import{EmptyState}from'./EmptyState';import V1PositionCard from'../../components/PositionCard/V1';import QuestionHelper from'../../components/QuestionHelper';import{Dots}from'../../components/swap/styleds';export default function MigrateV1(){var _Object$keys;var theme=useContext(ThemeContext);var _useActiveWeb3React=useActiveWeb3React(),account=_useActiveWeb3React.account,chainId=_useActiveWeb3React.chainId;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),tokenSearch=_useState2[0],setTokenSearch=_useState2[1];var handleTokenSearchChange=useCallback(function(e){return setTokenSearch(e.target.value);},[setTokenSearch]);// automatically add the search token\n// get V1 LP balances\nvar V1Exchanges=useAllTokenV1Exchanges();var V1LiquidityTokens=useMemo(function(){return chainId?Object.keys(V1Exchanges).map(function(exchangeAddress){return new Token(chainId,exchangeAddress,18,'UNI-V1','Uniswap V1');}):[];},[chainId,V1Exchanges]);var _useTokenBalancesWith=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,V1LiquidityTokens),_useTokenBalancesWith2=_slicedToArray(_useTokenBalancesWith,2),V1LiquidityBalances=_useTokenBalancesWith2[0],V1LiquidityBalancesLoading=_useTokenBalancesWith2[1];var allV1PairsWithLiquidity=V1LiquidityTokens.filter(function(V1LiquidityToken){var balance=V1LiquidityBalances===null||V1LiquidityBalances===void 0?void 0:V1LiquidityBalances[V1LiquidityToken.address];return balance&&JSBI.greaterThan(balance.raw,JSBI.BigInt(0));}).map(function(V1LiquidityToken){var balance=V1LiquidityBalances[V1LiquidityToken.address];return balance?/*#__PURE__*/React.createElement(V1PositionCard,{key:V1LiquidityToken.address,token:V1Exchanges[V1LiquidityToken.address],V1LiquidityBalance:balance}):null;});// should never always be false, because a V1 exhchange exists for WBNB on all testnets\nvar isLoading=((_Object$keys=Object.keys(V1Exchanges))===null||_Object$keys===void 0?void 0:_Object$keys.length)===0||V1LiquidityBalancesLoading;return/*#__PURE__*/React.createElement(BodyWrapper,{style:{padding:24}},/*#__PURE__*/React.createElement(AutoColumn,{gap:\"16px\"},/*#__PURE__*/React.createElement(AutoRow,{style:{alignItems:'center',justifyContent:'space-between'},gap:\"8px\"},/*#__PURE__*/React.createElement(BackArrow,{to:\"/pool\"}),/*#__PURE__*/React.createElement(TYPE.mediumHeader,null,\"Migrate V1 Liquidity\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\"}))),/*#__PURE__*/React.createElement(TYPE.body,{style:{marginBottom:8,fontWeight:400}},\"For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap V2.\"),!account?/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},\"Connect to a wallet to view your V1 liquidity.\")):isLoading?/*#__PURE__*/React.createElement(LightCard,{padding:\"40px\"},/*#__PURE__*/React.createElement(TYPE.body,{color:theme.text3,textAlign:\"center\"},/*#__PURE__*/React.createElement(Dots,null,\"Loading\"))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AutoRow,null,/*#__PURE__*/React.createElement(SearchInput,{value:tokenSearch,onChange:handleTokenSearchChange,placeholder:\"Enter a token address to find liquidity\"})),(allV1PairsWithLiquidity===null||allV1PairsWithLiquidity===void 0?void 0:allV1PairsWithLiquidity.length)>0?/*#__PURE__*/React.createElement(React.Fragment,null,allV1PairsWithLiquidity):/*#__PURE__*/React.createElement(EmptyState,{message:\"No V1 Liquidity found.\"}))));}","map":{"version":3,"sources":["D:/solidityproj/esccoinswap/interface-i18n1.3/src/pages/MigrateV1/index.tsx"],"names":["JSBI","Token","React","useCallback","useContext","useMemo","useState","ThemeContext","AutoColumn","AutoRow","SearchInput","useAllTokenV1Exchanges","useActiveWeb3React","useTokenBalancesWithLoadingIndicator","BackArrow","TYPE","LightCard","BodyWrapper","EmptyState","V1PositionCard","QuestionHelper","Dots","MigrateV1","theme","account","chainId","tokenSearch","setTokenSearch","handleTokenSearchChange","e","target","value","V1Exchanges","V1LiquidityTokens","Object","keys","map","exchangeAddress","undefined","V1LiquidityBalances","V1LiquidityBalancesLoading","allV1PairsWithLiquidity","filter","V1LiquidityToken","balance","address","greaterThan","raw","BigInt","isLoading","length","padding","alignItems","justifyContent","marginBottom","fontWeight","text3"],"mappings":"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","sourcesContent":["import { JSBI, Token } from 'sb1swap-sdk'\nimport React, { useCallback, useContext, useMemo, useState } from 'react'\nimport { ThemeContext } from 'styled-components'\nimport { AutoColumn } from '../../components/Column'\nimport { AutoRow } from '../../components/Row'\nimport { SearchInput } from '../../components/SearchModal/styleds'\nimport { useAllTokenV1Exchanges } from '../../data/V1'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useTokenBalancesWithLoadingIndicator } from '../../state/wallet/hooks'\nimport { BackArrow, TYPE } from '../../theme'\nimport { LightCard } from '../../components/Card'\nimport { BodyWrapper } from '../AppBody'\nimport { EmptyState } from './EmptyState'\nimport V1PositionCard from '../../components/PositionCard/V1'\nimport QuestionHelper from '../../components/QuestionHelper'\nimport { Dots } from '../../components/swap/styleds'\nexport default function MigrateV1() {\n  const theme = useContext(ThemeContext)\n  const { account, chainId } = useActiveWeb3React()\n\n  const [tokenSearch, setTokenSearch] = useState<string>('')\n  const handleTokenSearchChange = useCallback(e => setTokenSearch(e.target.value), [setTokenSearch])\n\n  // automatically add the search token\n\n  // get V1 LP balances\n  const V1Exchanges = useAllTokenV1Exchanges()\n  const V1LiquidityTokens: Token[] = useMemo(() => {\n    return chainId\n      ? Object.keys(V1Exchanges).map(exchangeAddress => new Token(chainId, exchangeAddress, 18, 'UNI-V1', 'Uniswap V1'))\n      : []\n  }, [chainId, V1Exchanges])\n  const [V1LiquidityBalances, V1LiquidityBalancesLoading] = useTokenBalancesWithLoadingIndicator(\n    account ?? undefined,\n    V1LiquidityTokens\n  )\n  const allV1PairsWithLiquidity = V1LiquidityTokens.filter(V1LiquidityToken => {\n    const balance = V1LiquidityBalances?.[V1LiquidityToken.address]\n    return balance && JSBI.greaterThan(balance.raw, JSBI.BigInt(0))\n  }).map(V1LiquidityToken => {\n    const balance = V1LiquidityBalances[V1LiquidityToken.address]\n    return balance ? (\n      <V1PositionCard\n        key={V1LiquidityToken.address}\n        token={V1Exchanges[V1LiquidityToken.address]}\n        V1LiquidityBalance={balance}\n      />\n    ) : null\n  })\n\n  // should never always be false, because a V1 exhchange exists for WBNB on all testnets\n  const isLoading = Object.keys(V1Exchanges)?.length === 0 || V1LiquidityBalancesLoading\n\n  return (\n    <BodyWrapper style={{ padding: 24 }}>\n      <AutoColumn gap=\"16px\">\n        <AutoRow style={{ alignItems: 'center', justifyContent: 'space-between' }} gap=\"8px\">\n          <BackArrow to=\"/pool\" />\n          <TYPE.mediumHeader>Migrate V1 Liquidity</TYPE.mediumHeader>\n          <div>\n            <QuestionHelper text=\"Migrate your liquidity tokens from Uniswap V1 to Uniswap V2.\" />\n          </div>\n        </AutoRow>\n\n        <TYPE.body style={{ marginBottom: 8, fontWeight: 400 }}>\n          For each pool shown below, click migrate to remove your liquidity from Uniswap V1 and deposit it into Uniswap\n          V2.\n        </TYPE.body>\n\n        {!account ? (\n          <LightCard padding=\"40px\">\n            <TYPE.body color={theme.text3} textAlign=\"center\">\n              Connect to a wallet to view your V1 liquidity.\n            </TYPE.body>\n          </LightCard>\n        ) : isLoading ? (\n          <LightCard padding=\"40px\">\n            <TYPE.body color={theme.text3} textAlign=\"center\">\n              <Dots>Loading</Dots>\n            </TYPE.body>\n          </LightCard>\n        ) : (\n          <>\n            <AutoRow>\n              <SearchInput\n                value={tokenSearch}\n                onChange={handleTokenSearchChange}\n                placeholder=\"Enter a token address to find liquidity\"\n              />\n            </AutoRow>\n            {allV1PairsWithLiquidity?.length > 0 ? (\n              <>{allV1PairsWithLiquidity}</>\n            ) : (\n              <EmptyState message=\"No V1 Liquidity found.\" />\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </BodyWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}