{"ast":null,"code":"// import i18next from 'i18next'\n// import { initReactI18next } from 'react-i18next'\n// import XHR from 'i18next-xhr-backend'\n// import LanguageDetector from 'i18next-browser-languagedetector'\n// i18next\n//   .use(XHR)\n//   .use(LanguageDetector)\n//   .use(initReactI18next)\n//   .init({\n//     backend: {\n//       loadPath: `./locales/{{lng}}.json`\n//     },\n//     react: {\n//       useSuspense: true\n//     },\n//     fallbackLng: 'en',\n//     preload: ['en'],\n//     keySeparator: false,\n//     interpolation: { escapeValue: false }\n//   })\n// export default i18next\n// import LanguageDetector from 'i18next-browser-languagedetector';\n// import i18n from \"i18next\";\n// import deTrans from \"./locales/de.json\";\n// import enTrans from \"./locales/en.json\";\n// import esarTrans from \"./locales/es-AR.json\";\n// import esusTrans from \"./locales/es-US.json\";\n// import ititTrans from \"./locales/it-IT.json\";\n// import iwTrans from \"./locales/iw.json\";\n// import roTrans from \"./locales/ro.json\";\n// import ruTrans from \"./locales/ru.json\";\n// import viTrans from \"./locales/vi.json\";\n// import zhcnTrans from \"./locales/zh-CN.json\";\n// import zhtwTrans from \"./locales/zh-TW.json\";\n// import {\n//   initReactI18next\n// } from 'react-i18next';\n// let lang = localStorage.getItem(\"language\");\n// if (!lang) {\n//     lang = 'zhcn';\n//     localStorage.setItem(\"language\", 'zhcn');\n// }\n// i18n.use(LanguageDetector) //嗅探当前浏览器语言\n// .use(initReactI18next) //init i18next\n// .init({\n//   //引入资源文件\n//   resources: {\n//     de: {\n//       translation: deTrans,\n//     },\n//     en: {\n//       translation: enTrans,\n//     },\n//     esar: {\n//       translation: esarTrans,\n//     },\n//     esus: {\n//       translation: esusTrans,\n//     },\n//     itit: {\n//       translation: ititTrans,\n//     },\n//     iw: {\n//       translation: iwTrans,\n//     },\n//     ro: {\n//       translation: roTrans,\n//     },\n//     ru: {\n//       translation: ruTrans,\n//     },\n//     vi: {\n//       translation: viTrans,\n//     },\n//     zhcn: {\n//       translation: zhcnTrans,\n//     },\n//     zhtw: {\n//       translation: zhtwTrans,\n//     },\n//   },\n//   //选择默认语言，选择内容为上述配置中的key，即en/zh\n//   fallbackLng: lang,\n//   debug: false,\n//   interpolation: {\n//     escapeValue: false, // not needed for react as it escapes by default\n//   },\n// })\n// export default i18n;\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport deTrans from \"./locales/de.json\";\nimport enTrans from \"./locales/en.json\";\nimport esarTrans from \"./locales/es-AR.json\";\nimport esusTrans from \"./locales/es-US.json\";\nimport ititTrans from \"./locales/it-IT.json\";\nimport iwTrans from \"./locales/iw.json\";\nimport roTrans from \"./locales/ro.json\";\nimport ruTrans from \"./locales/ru.json\";\nimport viTrans from \"./locales/vi.json\";\nimport zhcnTrans from \"./locales/zh-CN.json\";\nimport zhtwTrans from \"./locales/zh-TW.json\";\ni18n.use(LanguageDetector).use(initReactI18next).init({\n  resources: {\n    de: {\n      translation: deTrans\n    },\n    en: {\n      translation: enTrans\n    },\n    esar: {\n      translation: esarTrans\n    },\n    esus: {\n      translation: esusTrans\n    },\n    itit: {\n      translation: ititTrans\n    },\n    iw: {\n      translation: iwTrans\n    },\n    ro: {\n      translation: roTrans\n    },\n    ru: {\n      translation: ruTrans\n    },\n    vi: {\n      translation: viTrans\n    },\n    zhcn: {\n      translation: zhcnTrans\n    },\n    zhtw: {\n      translation: zhtwTrans\n    }\n  },\n  fallbackLng: 'zhcn',\n  debug: true,\n  react: {\n    useSuspense: false\n  },\n  detection: {\n    order: ['querystring', 'navigator', 'localStorage'],\n    lookupQuerystring: 'lang'\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["C:/Users/yunlong gao/Desktop/interface-i18n1.0/src/i18n.ts"],"names":["i18n","initReactI18next","LanguageDetector","deTrans","enTrans","esarTrans","esusTrans","ititTrans","iwTrans","roTrans","ruTrans","viTrans","zhcnTrans","zhtwTrans","use","init","resources","de","translation","en","esar","esus","itit","iw","ro","ru","vi","zhcn","zhtw","fallbackLng","debug","react","useSuspense","detection","order","lookupQuerystring"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AAEAb,IAAI,CACDc,GADH,CACOZ,gBADP,EAEGY,GAFH,CAEOb,gBAFP,EAGGc,IAHH,CAGQ;AACJC,EAAAA,SAAS,EAAE;AACLC,IAAAA,EAAE,EAAE;AACFC,MAAAA,WAAW,EAAEf;AADX,KADC;AAILgB,IAAAA,EAAE,EAAE;AACFD,MAAAA,WAAW,EAAEd;AADX,KAJC;AAOLgB,IAAAA,IAAI,EAAE;AACJF,MAAAA,WAAW,EAAEb;AADT,KAPD;AAULgB,IAAAA,IAAI,EAAE;AACJH,MAAAA,WAAW,EAAEZ;AADT,KAVD;AAaLgB,IAAAA,IAAI,EAAE;AACJJ,MAAAA,WAAW,EAAEX;AADT,KAbD;AAgBLgB,IAAAA,EAAE,EAAE;AACFL,MAAAA,WAAW,EAAEV;AADX,KAhBC;AAmBLgB,IAAAA,EAAE,EAAE;AACFN,MAAAA,WAAW,EAAET;AADX,KAnBC;AAsBLgB,IAAAA,EAAE,EAAE;AACFP,MAAAA,WAAW,EAAER;AADX,KAtBC;AAyBLgB,IAAAA,EAAE,EAAE;AACFR,MAAAA,WAAW,EAAEP;AADX,KAzBC;AA4BLgB,IAAAA,IAAI,EAAE;AACJT,MAAAA,WAAW,EAAEN;AADT,KA5BD;AA+BLgB,IAAAA,IAAI,EAAE;AACJV,MAAAA,WAAW,EAAEL;AADT;AA/BD,GADP;AAoCJgB,EAAAA,WAAW,EAAE,MApCT;AAqCJC,EAAAA,KAAK,EAAE,IArCH;AAsCJC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAE;AADR,GAtCH;AAyCJC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,CAAC,aAAD,EAAgB,WAAhB,EAA6B,cAA7B,CADE;AAETC,IAAAA,iBAAiB,EAAE;AAFV;AAzCP,CAHR;AAkDA,eAAenC,IAAf","sourcesContent":["// import i18next from 'i18next'\n// import { initReactI18next } from 'react-i18next'\n// import XHR from 'i18next-xhr-backend'\n// import LanguageDetector from 'i18next-browser-languagedetector'\n\n// i18next\n//   .use(XHR)\n//   .use(LanguageDetector)\n//   .use(initReactI18next)\n//   .init({\n//     backend: {\n//       loadPath: `./locales/{{lng}}.json`\n//     },\n//     react: {\n//       useSuspense: true\n//     },\n//     fallbackLng: 'en',\n//     preload: ['en'],\n//     keySeparator: false,\n//     interpolation: { escapeValue: false }\n//   })\n\n// export default i18next\n// import LanguageDetector from 'i18next-browser-languagedetector';\n// import i18n from \"i18next\";\n// import deTrans from \"./locales/de.json\";\n// import enTrans from \"./locales/en.json\";\n// import esarTrans from \"./locales/es-AR.json\";\n// import esusTrans from \"./locales/es-US.json\";\n// import ititTrans from \"./locales/it-IT.json\";\n// import iwTrans from \"./locales/iw.json\";\n// import roTrans from \"./locales/ro.json\";\n// import ruTrans from \"./locales/ru.json\";\n// import viTrans from \"./locales/vi.json\";\n// import zhcnTrans from \"./locales/zh-CN.json\";\n// import zhtwTrans from \"./locales/zh-TW.json\";\n// import {\n//   initReactI18next\n// } from 'react-i18next';\n\n// let lang = localStorage.getItem(\"language\");\n// if (!lang) {\n//     lang = 'zhcn';\n//     localStorage.setItem(\"language\", 'zhcn');\n// }\n\n// i18n.use(LanguageDetector) //嗅探当前浏览器语言\n// .use(initReactI18next) //init i18next\n// .init({\n//   //引入资源文件\n//   resources: {\n//     de: {\n//       translation: deTrans,\n//     },\n//     en: {\n//       translation: enTrans,\n//     },\n//     esar: {\n//       translation: esarTrans,\n//     },\n//     esus: {\n//       translation: esusTrans,\n//     },\n//     itit: {\n//       translation: ititTrans,\n//     },\n//     iw: {\n//       translation: iwTrans,\n//     },\n//     ro: {\n//       translation: roTrans,\n//     },\n//     ru: {\n//       translation: ruTrans,\n//     },\n//     vi: {\n//       translation: viTrans,\n//     },\n//     zhcn: {\n//       translation: zhcnTrans,\n//     },\n//     zhtw: {\n//       translation: zhtwTrans,\n//     },\n//   },\n//   //选择默认语言，选择内容为上述配置中的key，即en/zh\n//   fallbackLng: lang,\n//   debug: false,\n//   interpolation: {\n//     escapeValue: false, // not needed for react as it escapes by default\n//   },\n// })\n\n// export default i18n;\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport deTrans from \"./locales/de.json\";\nimport enTrans from \"./locales/en.json\";\nimport esarTrans from \"./locales/es-AR.json\";\nimport esusTrans from \"./locales/es-US.json\";\nimport ititTrans from \"./locales/it-IT.json\";\nimport iwTrans from \"./locales/iw.json\";\nimport roTrans from \"./locales/ro.json\";\nimport ruTrans from \"./locales/ru.json\";\nimport viTrans from \"./locales/vi.json\";\nimport zhcnTrans from \"./locales/zh-CN.json\";\nimport zhtwTrans from \"./locales/zh-TW.json\";\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n          de: {\n            translation: deTrans,\n          },\n          en: {\n            translation: enTrans,\n          },\n          esar: {\n            translation: esarTrans,\n          },\n          esus: {\n            translation: esusTrans,\n          },\n          itit: {\n            translation: ititTrans,\n          },\n          iw: {\n            translation: iwTrans,\n          },\n          ro: {\n            translation: roTrans,\n          },\n          ru: {\n            translation: ruTrans,\n          },\n          vi: {\n            translation: viTrans,\n          },\n          zhcn: {\n            translation: zhcnTrans,\n          },\n          zhtw: {\n            translation: zhtwTrans,\n          },\n        },\n    fallbackLng: 'zhcn',\n    debug: true,\n    react: {\n      useSuspense: false,\n    },\n    detection: {\n      order: ['querystring', 'navigator', 'localStorage'],\n      lookupQuerystring: 'lang',\n    },\n  })\n\nexport default i18n\n"]},"metadata":{},"sourceType":"module"}