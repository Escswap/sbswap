{"ast":null,"code":"import _objectSpread from\"D:\\\\solidityproj\\\\esccoinswap\\\\interface-i18n1.3\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{useDefaultTokenList}from'./../state/lists/hooks';import{parseBytes32String}from'@ethersproject/strings';import{BSC,Token,currencyEquals}from'sb1swap-sdk';import{useMemo}from'react';import{useCombinedActiveList,useCombinedInactiveList}from'../state/lists/hooks';import{NEVER_RELOAD,useSingleCallResult}from'../state/multicall/hooks';import{useUserAddedTokens}from'../state/user/hooks';import{isAddress}from'../utils';import{useActiveWeb3React}from'./index';import{useBytes32TokenContract,useTokenContract}from'./useContract';import{filterTokens}from'../components/SearchModal/filtering';import{arrayify}from'ethers/lib/utils';// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap,includeUserAdded){var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var userAddedTokens=useUserAddedTokens();return useMemo(function(){if(!chainId)return{};// reduce to just tokens\nvar mapWithoutUrls=Object.keys(tokenMap[chainId]).reduce(function(newMap,address){newMap[address]=tokenMap[chainId][address].token;return newMap;},{});if(includeUserAdded){return userAddedTokens// reduce into all ALL_TOKENS filtered by the current chain\n.reduce(function(tokenMap,token){tokenMap[token.address]=token;return tokenMap;},// must make a copy because reduce modifies the map, and we do not\n// want to make a copy in every iteration\n_objectSpread({},mapWithoutUrls));}return mapWithoutUrls;},[chainId,userAddedTokens,tokenMap,includeUserAdded]);}export function useDefaultTokens(){var defaultList=useDefaultTokenList();return useTokensFromMap(defaultList,false);}export function useAllTokens(){var allTokens=useCombinedActiveList();return useTokensFromMap(allTokens,true);}export function useAllInactiveTokens(){// get inactive tokens\nvar inactiveTokensMap=useCombinedInactiveList();var inactiveTokens=useTokensFromMap(inactiveTokensMap,false);// filter out any token that are on active list\nvar activeTokensAddresses=Object.keys(useAllTokens());var filteredInactive=activeTokensAddresses?Object.keys(inactiveTokens).reduce(function(newMap,address){if(!activeTokensAddresses.includes(address)){newMap[address]=inactiveTokens[address];}return newMap;},{}):inactiveTokens;return filteredInactive;}export function useIsTokenActive(token){var activeTokens=useAllTokens();if(!activeTokens||!token){return false;}return!!activeTokens[token.address];}// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery){var _useActiveWeb3React2=useActiveWeb3React(),chainId=_useActiveWeb3React2.chainId;var inactiveTokens=useAllInactiveTokens();return useMemo(function(){if(!chainId||searchQuery===''){return undefined;}else{var tokens=filterTokens(Object.values(inactiveTokens),searchQuery);return tokens;}},[chainId,inactiveTokens,searchQuery]);}// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency){var userAddedTokens=useUserAddedTokens();if(!currency){return false;}return!!userAddedTokens.find(function(token){return currencyEquals(currency,token);});}// parse a name or symbol from a token response\nvar BYTES32_REGEX=/^0x[a-fA-F0-9]{64}$/;function parseStringOrBytes32(str,bytes32,defaultValue){return str&&str.length>0?str:// need to check for proper bytes string and valid terminator\nbytes32&&BYTES32_REGEX.test(bytes32)&&arrayify(bytes32)[31]===0?parseBytes32String(bytes32):defaultValue;}// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress){var _useActiveWeb3React3=useActiveWeb3React(),chainId=_useActiveWeb3React3.chainId;var tokens=useAllTokens();var address=isAddress(tokenAddress);var tokenContract=useTokenContract(address?address:undefined,false);var tokenContractBytes32=useBytes32TokenContract(address?address:undefined,false);var token=address?tokens[address]:undefined;var tokenName=useSingleCallResult(token?undefined:tokenContract,'name',undefined,NEVER_RELOAD);var tokenNameBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'name',undefined,NEVER_RELOAD);var symbol=useSingleCallResult(token?undefined:tokenContract,'symbol',undefined,NEVER_RELOAD);var symbolBytes32=useSingleCallResult(token?undefined:tokenContractBytes32,'symbol',undefined,NEVER_RELOAD);var decimals=useSingleCallResult(token?undefined:tokenContract,'decimals',undefined,NEVER_RELOAD);return useMemo(function(){if(token)return token;if(!chainId||!address)return undefined;if(decimals.loading||symbol.loading||tokenName.loading)return null;if(decimals.result){var _symbol$result,_symbolBytes32$result,_tokenName$result,_tokenNameBytes32$res;return new Token(chainId,address,decimals.result[0],parseStringOrBytes32((_symbol$result=symbol.result)===null||_symbol$result===void 0?void 0:_symbol$result[0],(_symbolBytes32$result=symbolBytes32.result)===null||_symbolBytes32$result===void 0?void 0:_symbolBytes32$result[0],'UNKNOWN'),parseStringOrBytes32((_tokenName$result=tokenName.result)===null||_tokenName$result===void 0?void 0:_tokenName$result[0],(_tokenNameBytes32$res=tokenNameBytes32.result)===null||_tokenNameBytes32$res===void 0?void 0:_tokenNameBytes32$res[0],'Unknown Token'));}return undefined;},[address,chainId,decimals.loading,decimals.result,symbol.loading,symbol.result,symbolBytes32.result,token,tokenName.loading,tokenName.result,tokenNameBytes32.result]);}export function useCurrency(currencyId){var isBSC=(currencyId===null||currencyId===void 0?void 0:currencyId.toUpperCase())==='BSC';var token=useToken(isBSC?undefined:currencyId);return isBSC?BSC:token;}","map":{"version":3,"sources":["D:/solidityproj/esccoinswap/interface-i18n1.3/src/hooks/Tokens.ts"],"names":["useDefaultTokenList","parseBytes32String","BSC","Token","currencyEquals","useMemo","useCombinedActiveList","useCombinedInactiveList","NEVER_RELOAD","useSingleCallResult","useUserAddedTokens","isAddress","useActiveWeb3React","useBytes32TokenContract","useTokenContract","filterTokens","arrayify","useTokensFromMap","tokenMap","includeUserAdded","chainId","userAddedTokens","mapWithoutUrls","Object","keys","reduce","newMap","address","token","useDefaultTokens","defaultList","useAllTokens","allTokens","useAllInactiveTokens","inactiveTokensMap","inactiveTokens","activeTokensAddresses","filteredInactive","includes","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","undefined","tokens","values","useIsUserAddedToken","currency","find","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","length","test","useToken","tokenAddress","tokenContract","tokenContractBytes32","tokenName","tokenNameBytes32","symbol","symbolBytes32","decimals","loading","result","useCurrency","currencyId","isBSC","toUpperCase"],"mappings":"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","sourcesContent":["import { TokenAddressMap, useDefaultTokenList } from './../state/lists/hooks'\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, BSC, Token, currencyEquals } from 'sb1swap-sdk'\nimport { useMemo } from 'react'\nimport { useCombinedActiveList, useCombinedInactiveList } from '../state/lists/hooks'\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport { useUserAddedTokens } from '../state/user/hooks'\nimport { isAddress } from '../utils'\n\nimport { useActiveWeb3React } from './index'\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\nimport { arrayify } from 'ethers/lib/utils'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap, token) => {\n              tokenMap[token.address] = token\n              return tokenMap\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls }\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    } else {\n      const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n      return tokens\n    }\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find(token => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address ? address : undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address ? address : undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token')\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBSC = currencyId?.toUpperCase() === 'BSC'\n  const token = useToken(isBSC ? undefined : currencyId)\n  return isBSC ? BSC : token\n}\n"]},"metadata":{},"sourceType":"module"}