{"ast":null,"code":"// import i18next from 'i18next'\n// import { initReactI18next } from 'react-i18next'\n// import XHR from 'i18next-xhr-backend'\n// import LanguageDetector from 'i18next-browser-languagedetector'\n// i18next\n//   .use(XHR)\n//   .use(LanguageDetector)\n//   .use(initReactI18next)\n//   .init({\n//     backend: {\n//       loadPath: `./locales/{{lng}}.json`\n//     },\n//     react: {\n//       useSuspense: true\n//     },\n//     fallbackLng: 'en',\n//     preload: ['en'],\n//     keySeparator: false,\n//     interpolation: { escapeValue: false }\n//   })\n// export default i18next\n// import LanguageDetector from 'i18next-browser-languagedetector';\n// import i18n from \"i18next\";\n// import deTrans from \"./locales/de.json\";\n// import enTrans from \"./locales/en.json\";\n// import esarTrans from \"./locales/es-AR.json\";\n// import esusTrans from \"./locales/es-US.json\";\n// import ititTrans from \"./locales/it-IT.json\";\n// import iwTrans from \"./locales/iw.json\";\n// import roTrans from \"./locales/ro.json\";\n// import ruTrans from \"./locales/ru.json\";\n// import viTrans from \"./locales/vi.json\";\n// import zhcnTrans from \"./locales/zh-CN.json\";\n// import zhtwTrans from \"./locales/zh-TW.json\";\n// import {\n//   initReactI18next\n// } from 'react-i18next';\n// let lang = localStorage.getItem(\"language\");\n// if (!lang) {\n//     lang = 'zhcn';\n//     localStorage.setItem(\"language\", 'zhcn');\n// }\n// i18n.use(LanguageDetector) //嗅探当前浏览器语言\n// .use(initReactI18next) //init i18next\n// .init({\n//   //引入资源文件\n//   resources: {\n//     de: {\n//       translation: deTrans,\n//     },\n//     en: {\n//       translation: enTrans,\n//     },\n//     esar: {\n//       translation: esarTrans,\n//     },\n//     esus: {\n//       translation: esusTrans,\n//     },\n//     itit: {\n//       translation: ititTrans,\n//     },\n//     iw: {\n//       translation: iwTrans,\n//     },\n//     ro: {\n//       translation: roTrans,\n//     },\n//     ru: {\n//       translation: ruTrans,\n//     },\n//     vi: {\n//       translation: viTrans,\n//     },\n//     zhcn: {\n//       translation: zhcnTrans,\n//     },\n//     zhtw: {\n//       translation: zhtwTrans,\n//     },\n//   },\n//   //选择默认语言，选择内容为上述配置中的key，即en/zh\n//   fallbackLng: lang,\n//   debug: false,\n//   interpolation: {\n//     escapeValue: false, // not needed for react as it escapes by default\n//   },\n// })\n// export default i18n;\nimport i18n from'i18next';import{initReactI18next}from'react-i18next';import LanguageDetector from'i18next-browser-languagedetector';import deTrans from\"./locales/de.json\";import enTrans from\"./locales/en.json\";import esarTrans from\"./locales/es-AR.json\";import esusTrans from\"./locales/es-US.json\";import ititTrans from\"./locales/it-IT.json\";import iwTrans from\"./locales/iw.json\";import roTrans from\"./locales/ro.json\";import ruTrans from\"./locales/ru.json\";import viTrans from\"./locales/vi.json\";import zhcnTrans from\"./locales/zh-CN.json\";import zhtwTrans from\"./locales/zh-TW.json\";i18n.use(LanguageDetector).use(initReactI18next).init({resources:{de:{translation:deTrans},en:{translation:enTrans},esar:{translation:esarTrans},esus:{translation:esusTrans},itit:{translation:ititTrans},iw:{translation:iwTrans},ro:{translation:roTrans},ru:{translation:ruTrans},vi:{translation:viTrans},zhcn:{translation:zhcnTrans},zhtw:{translation:zhtwTrans}},fallbackLng:'zhcn',debug:true,react:{useSuspense:false},detection:{order:['querystring','navigator','localStorage'],lookupQuerystring:'lang'}});export default i18n;","map":{"version":3,"sources":["D:/solidityproj/esccoinswap/interface-i18n1.0/src/i18n.ts"],"names":["i18n","initReactI18next","LanguageDetector","deTrans","enTrans","esarTrans","esusTrans","ititTrans","iwTrans","roTrans","ruTrans","viTrans","zhcnTrans","zhtwTrans","use","init","resources","de","translation","en","esar","esus","itit","iw","ro","ru","vi","zhcn","zhtw","fallbackLng","debug","react","useSuspense","detection","order","lookupQuerystring"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,sBAAtB,CAEAb,IAAI,CACDc,GADH,CACOZ,gBADP,EAEGY,GAFH,CAEOb,gBAFP,EAGGc,IAHH,CAGQ,CACJC,SAAS,CAAE,CACLC,EAAE,CAAE,CACFC,WAAW,CAAEf,OADX,CADC,CAILgB,EAAE,CAAE,CACFD,WAAW,CAAEd,OADX,CAJC,CAOLgB,IAAI,CAAE,CACJF,WAAW,CAAEb,SADT,CAPD,CAULgB,IAAI,CAAE,CACJH,WAAW,CAAEZ,SADT,CAVD,CAaLgB,IAAI,CAAE,CACJJ,WAAW,CAAEX,SADT,CAbD,CAgBLgB,EAAE,CAAE,CACFL,WAAW,CAAEV,OADX,CAhBC,CAmBLgB,EAAE,CAAE,CACFN,WAAW,CAAET,OADX,CAnBC,CAsBLgB,EAAE,CAAE,CACFP,WAAW,CAAER,OADX,CAtBC,CAyBLgB,EAAE,CAAE,CACFR,WAAW,CAAEP,OADX,CAzBC,CA4BLgB,IAAI,CAAE,CACJT,WAAW,CAAEN,SADT,CA5BD,CA+BLgB,IAAI,CAAE,CACJV,WAAW,CAAEL,SADT,CA/BD,CADP,CAoCJgB,WAAW,CAAE,MApCT,CAqCJC,KAAK,CAAE,IArCH,CAsCJC,KAAK,CAAE,CACLC,WAAW,CAAE,KADR,CAtCH,CAyCJC,SAAS,CAAE,CACTC,KAAK,CAAE,CAAC,aAAD,CAAgB,WAAhB,CAA6B,cAA7B,CADE,CAETC,iBAAiB,CAAE,MAFV,CAzCP,CAHR,EAkDA,cAAenC,CAAAA,IAAf","sourcesContent":["// import i18next from 'i18next'\n// import { initReactI18next } from 'react-i18next'\n// import XHR from 'i18next-xhr-backend'\n// import LanguageDetector from 'i18next-browser-languagedetector'\n\n// i18next\n//   .use(XHR)\n//   .use(LanguageDetector)\n//   .use(initReactI18next)\n//   .init({\n//     backend: {\n//       loadPath: `./locales/{{lng}}.json`\n//     },\n//     react: {\n//       useSuspense: true\n//     },\n//     fallbackLng: 'en',\n//     preload: ['en'],\n//     keySeparator: false,\n//     interpolation: { escapeValue: false }\n//   })\n\n// export default i18next\n// import LanguageDetector from 'i18next-browser-languagedetector';\n// import i18n from \"i18next\";\n// import deTrans from \"./locales/de.json\";\n// import enTrans from \"./locales/en.json\";\n// import esarTrans from \"./locales/es-AR.json\";\n// import esusTrans from \"./locales/es-US.json\";\n// import ititTrans from \"./locales/it-IT.json\";\n// import iwTrans from \"./locales/iw.json\";\n// import roTrans from \"./locales/ro.json\";\n// import ruTrans from \"./locales/ru.json\";\n// import viTrans from \"./locales/vi.json\";\n// import zhcnTrans from \"./locales/zh-CN.json\";\n// import zhtwTrans from \"./locales/zh-TW.json\";\n// import {\n//   initReactI18next\n// } from 'react-i18next';\n\n// let lang = localStorage.getItem(\"language\");\n// if (!lang) {\n//     lang = 'zhcn';\n//     localStorage.setItem(\"language\", 'zhcn');\n// }\n\n// i18n.use(LanguageDetector) //嗅探当前浏览器语言\n// .use(initReactI18next) //init i18next\n// .init({\n//   //引入资源文件\n//   resources: {\n//     de: {\n//       translation: deTrans,\n//     },\n//     en: {\n//       translation: enTrans,\n//     },\n//     esar: {\n//       translation: esarTrans,\n//     },\n//     esus: {\n//       translation: esusTrans,\n//     },\n//     itit: {\n//       translation: ititTrans,\n//     },\n//     iw: {\n//       translation: iwTrans,\n//     },\n//     ro: {\n//       translation: roTrans,\n//     },\n//     ru: {\n//       translation: ruTrans,\n//     },\n//     vi: {\n//       translation: viTrans,\n//     },\n//     zhcn: {\n//       translation: zhcnTrans,\n//     },\n//     zhtw: {\n//       translation: zhtwTrans,\n//     },\n//   },\n//   //选择默认语言，选择内容为上述配置中的key，即en/zh\n//   fallbackLng: lang,\n//   debug: false,\n//   interpolation: {\n//     escapeValue: false, // not needed for react as it escapes by default\n//   },\n// })\n\n// export default i18n;\nimport i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport deTrans from \"./locales/de.json\";\nimport enTrans from \"./locales/en.json\";\nimport esarTrans from \"./locales/es-AR.json\";\nimport esusTrans from \"./locales/es-US.json\";\nimport ititTrans from \"./locales/it-IT.json\";\nimport iwTrans from \"./locales/iw.json\";\nimport roTrans from \"./locales/ro.json\";\nimport ruTrans from \"./locales/ru.json\";\nimport viTrans from \"./locales/vi.json\";\nimport zhcnTrans from \"./locales/zh-CN.json\";\nimport zhtwTrans from \"./locales/zh-TW.json\";\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n          de: {\n            translation: deTrans,\n          },\n          en: {\n            translation: enTrans,\n          },\n          esar: {\n            translation: esarTrans,\n          },\n          esus: {\n            translation: esusTrans,\n          },\n          itit: {\n            translation: ititTrans,\n          },\n          iw: {\n            translation: iwTrans,\n          },\n          ro: {\n            translation: roTrans,\n          },\n          ru: {\n            translation: ruTrans,\n          },\n          vi: {\n            translation: viTrans,\n          },\n          zhcn: {\n            translation: zhcnTrans,\n          },\n          zhtw: {\n            translation: zhtwTrans,\n          },\n        },\n    fallbackLng: 'zhcn',\n    debug: true,\n    react: {\n      useSuspense: false,\n    },\n    detection: {\n      order: ['querystring', 'navigator', 'localStorage'],\n      lookupQuerystring: 'lang',\n    },\n  })\n\nexport default i18n\n"]},"metadata":{},"sourceType":"module"}