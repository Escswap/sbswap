{"ast":null,"code":"import{BSC,Token,TokenAmount,WBNB}from'sb1swap-sdk';export function wrappedCurrency(currency,chainId){return chainId&&currency===BSC?WBNB[chainId]:currency instanceof Token?currency:undefined;}export function wrappedCurrencyAmount(currencyAmount,chainId){var token=currencyAmount&&chainId?wrappedCurrency(currencyAmount.currency,chainId):undefined;return token&&currencyAmount?new TokenAmount(token,currencyAmount.raw):undefined;}export function unwrappedToken(token){if(token.equals(WBNB[token.chainId]))return BSC;return token;}","map":{"version":3,"sources":["D:/solidityproj/esccoinswap/interface-i18n1.1/src/utils/wrappedCurrency.ts"],"names":["BSC","Token","TokenAmount","WBNB","wrappedCurrency","currency","chainId","undefined","wrappedCurrencyAmount","currencyAmount","token","raw","unwrappedToken","equals"],"mappings":"AAAA,OAA4CA,GAA5C,CAAiDC,KAAjD,CAAwDC,WAAxD,CAAqEC,IAArE,KAAiF,aAAjF,CAEA,MAAO,SAASC,CAAAA,eAAT,CAAyBC,QAAzB,CAAyDC,OAAzD,CAA0G,CAC/G,MAAOA,CAAAA,OAAO,EAAID,QAAQ,GAAKL,GAAxB,CAA8BG,IAAI,CAACG,OAAD,CAAlC,CAA8CD,QAAQ,WAAYJ,CAAAA,KAApB,CAA4BI,QAA5B,CAAuCE,SAA5F,CACD,CAED,MAAO,SAASC,CAAAA,qBAAT,CACLC,cADK,CAELH,OAFK,CAGoB,CACzB,GAAMI,CAAAA,KAAK,CAAGD,cAAc,EAAIH,OAAlB,CAA4BF,eAAe,CAACK,cAAc,CAACJ,QAAhB,CAA0BC,OAA1B,CAA3C,CAAgFC,SAA9F,CACA,MAAOG,CAAAA,KAAK,EAAID,cAAT,CAA0B,GAAIP,CAAAA,WAAJ,CAAgBQ,KAAhB,CAAuBD,cAAc,CAACE,GAAtC,CAA1B,CAAuEJ,SAA9E,CACD,CAED,MAAO,SAASK,CAAAA,cAAT,CAAwBF,KAAxB,CAAgD,CACrD,GAAIA,KAAK,CAACG,MAAN,CAAaV,IAAI,CAACO,KAAK,CAACJ,OAAP,CAAjB,CAAJ,CAAuC,MAAON,CAAAA,GAAP,CACvC,MAAOU,CAAAA,KAAP,CACD","sourcesContent":["import { ChainId, Currency, CurrencyAmount, BSC, Token, TokenAmount, WBNB } from 'sb1swap-sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === BSC ? WBNB[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WBNB[token.chainId])) return BSC\n  return token\n}\n"]},"metadata":{},"sourceType":"module"}